<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Esmaeil Seraj | Xiyang Wu</title>
    <link>https://wuxiyang1996.github.io/author/esmaeil-seraj/</link>
      <atom:link href="https://wuxiyang1996.github.io/author/esmaeil-seraj/index.xml" rel="self" type="application/rss+xml" />
    <description>Esmaeil Seraj</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 23 Nov 2020 13:29:16 -0800</lastBuildDate>
    <image>
      <url>https://wuxiyang1996.github.io/images/icon_hu246a7c5ca50c5215763d04ff4b959e84_299833_512x512_fill_lanczos_center_2.png</url>
      <title>Esmaeil Seraj</title>
      <link>https://wuxiyang1996.github.io/author/esmaeil-seraj/</link>
    </image>
    
    <item>
      <title>Learning Heterogeneous Multi-agent Communication for Joint Perception-Control Tasks</title>
      <link>https://wuxiyang1996.github.io/publication/marl_2020/</link>
      <pubDate>Mon, 23 Nov 2020 13:29:16 -0800</pubDate>
      <guid>https://wuxiyang1996.github.io/publication/marl_2020/</guid>
      <description>&lt;p&gt;Focusing on the coopeartive heterogenous MARL in FireCommander2020 environment, which is highly dynamic and stochastic, this project intends to investigate and propose a multi-agent communication learning framework to improve the cooperative behavior in collaborative Markov games and existing MARL algorithms. This project is still ongoing and expected to be done at the end of November. My responsibilities in this project covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Investigate the state-of-the-art multi-agent reinforcement learning algorithms, analyze the characteristics for several popular MARL algorithm, formulate the multi-agent joint perception-control task in FireCommander environment as a POMDP problem&lt;/li&gt;
&lt;li&gt;Regulate the FireCommander2020 environment for the multi-agent reinforcement learning, incorporate the agent and fire state update, reward computation module within the framework&lt;/li&gt;
&lt;li&gt;Implement several MARL algorithms IDQN, DIAL, CommNet, QMIX, COMA, etc. on the FireCommander environment to learn the coordination and cooperation in the heterogeneous agent team&lt;/li&gt;
&lt;li&gt;Implementing the novel experience sharing method for the optimal coordination and cooperation on the FireCommander environment and compare its performance with the benchmark algorithms&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>FireCommander: An Interactive, Probabilistic Multi-agent Environment for Joint Perception-Action Tasks</title>
      <link>https://wuxiyang1996.github.io/publication/rl_2020/</link>
      <pubDate>Sat, 31 Oct 2020 02:06:07 -0800</pubDate>
      <guid>https://wuxiyang1996.github.io/publication/rl_2020/</guid>
      <description>&lt;p&gt;The FireCommander is an interactive, probabilistic joint perception-action reconnaissance environment in which a composite team of agents (e.g., robots) cooperate to fight dynamic, propagating firespots (e.g., targets). In FireCommander game, a team of agents must be tasked to optimally deal with a wildfire situation in an environment with propagating fire areas and some facilities such as houses, hospitals, power stations, etc. The team of agents can accomplish their mission by first sensing (e.g., estimating fire states), communicating the sensed fire-information among each other and then taking action to put the firespots out based on the sensed information (e.g., dropping water on estimated fire locations). The FireCommander environment can be useful for research topics spanning a wide range of applications from Reinforcement Learning (RL) and Learning from Demonstration (LfD), to Coordination, Psychology, Human-Robot Interaction (HRI) and Teaming. My responsibility in this project covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Investigate the state-of-art of the reinforcement learning, learning from demonstration and multi-agent control, establish the agent kinematics and control model&lt;/li&gt;
&lt;li&gt;Design the simulation environment for the multi-agent firefighting tasks with PyGame based on the real environment setting, fire propagation model, agent kinematics and control model&lt;/li&gt;
&lt;li&gt;Establish the user-interface with PyQt5 to incorporate the user input or scenario design with the simulation environment, design the data storage and animation reconstruction method&lt;/li&gt;
&lt;li&gt;Implement the reward function based on the hierarchy importance of target, implement various scenarios to deal with real-world circumstances&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
    </item>
    
  </channel>
</rss>
